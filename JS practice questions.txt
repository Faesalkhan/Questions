display current day and time ------------------------------------
let date = new Date();
const arr = ["sun", "mon", "tue", "wed", "thur", "fri", "sat"];

// Get the day of the week (0-6, where 0 is Sunday and 6 is Saturday)
let today = date.getDay();
console.log("today is : " + arr[today]);

let hrs = date.getHours();
let mins = date.getMinutes();
let secs = date.getSeconds();

let prepend = hrs >= 12 ? "PM" : "AM";
hrs = hrs >= 12 ? hrs - 12 : hrs;
console.log("current time is : " + hrs + prepend + ":" + mins + ":" + secs);

print the date in the format dd/mm/yyyy ----------------------------------
let date = new Date();
let dd = date.getDate();
let mm = date.getMonth() + 1;
let yy = date.getFullYear();

if (dd < 10) {
  dd = "0" + dd;
}
if (mm < 10) {
  mm = "0" + mm;
}
console.log(dd + "/" + mm + "/" + yy);

guess the generated number --------------------------------------
let random = Math.ceil(Math.random() * 10);
let enter = prompt("enter a number");
if (random == enter) {
  alert("you guessed the right no.");
} else {
  console.log("wrong guess, the no. was : " + random);
}

add, subtract multiply and divide two numbers given by user --------------------------------- 

  <style>
    div {
      margin-top: 10px;
    }
  </style>
  <body>
    <div>
      <label for="firnum">enter first number</label>
      <input type="number" id="firnum" name="firnum" value="firnum" />
    </div>

    <div>
      <label for="secnum">enter second number</label>
      <input type="number" id="secnum" value="secnum" />
    </div>
    <div>
      <button id="add">Add</button>
      <button id="mul">Multiply</button>
      <button id="divi">Divide</button>
      <button id="minus">Minus</button>
    </div>
    <div>
      <p>result is : <span id="result"></span></p>
    </div>
    <script src="./prac.js"></script>
  </body>

let first = document.getElementById("firnum");
let second = document.querySelector("#secnum");

let add = document.querySelector("#add");
let mul = document.querySelector("#mul");
let divi = document.querySelector("#divi");
let minus = document.querySelector("#minus");

let result = document.querySelector("#result");

add.addEventListener("click", function () {
  let sum = Number(first.value) + Number(second.value);
  result.textContent = sum;
});

// in javasript, form input returns string. so fir.value, sec.value will be string.

mul.addEventListener("click", function () {
  let cross = first.value * second.value;
  result.textContent = cross;
});

divi.addEventListener("click", function () {
  let division = first.value / second.value;
  result.textContent = division;
});

minus.addEventListener("click", function () {
  let f = Number(first.value);
  let s = Number(second.value);
  if (f >= s) {
    let subtract = Number(first.value) - Number(second.value);         // or, f - s , as both are Number wrapped;
    result.textContent = subtract;
  } else {
    result.textContent = "first value should be greater than second value";
  }
});

get the file extension ---------------------------------
let str = "system.js";
let arr = str.split(".");
let ext = arr.pop();
console.log(ext);

or ------------
let str = "file.js";
console.log(str.split(".")[1]);


Write a JavaScript program to get the difference between a given number and 13, if the number is less than 13 return double the absolute difference. -----------------------
function diff(n) {
  if (n <= 13) {
    return (13 - n) * 2;
  } else {
    return n - 13;
  }
}
console.log(diff(26));
console.log(diff(3));
console.log(diff(13));

Write a JavaScript program to compute the sum of the two given integers. If the two values are the same, then return triple their sum ----------------------------------- 
function addi(x, y) {
  if (x === y) {
    return (x + y) * 3;
  } else {
    return x + y;
  }
}
console.log(addi(2, 3));
console.log(addi(9, 1));
console.log(addi(6, 6));
console.log(addi(5, 5));

Write a JavaScript program to check a pair of numbers and return true if one of the numbers is 50 or if their sum is
50 --------------------------------
function check(x, y) {
  if (x === 50 || y === 50 || x + y === 50) {
    return true;
  } else {
    return false;
  }
}
console.log(check(4, 5));
console.log(check(5, 5));
console.log(check(8, 50));
console.log(check(25, 25));

Write a JavaScript program to remove a character at the specified position in a given string and return the modified string.-----------------------------------------------------
function str(name,position) {
  let before = name.substring(0, position);                      // num
  let after = name.substring(position + 1, name.length);         // an
  let finalstr = before + after;
  return finalstr;
}

let result = str("numaan", 3);
console.log(result);

----------- or remove the particular character from string ---------------- in this case only first character in the occurence will get removed.
function name(str, removechr) {
  let ind = str.indexOf(removechr);
  let f = str.slice(0, ind);
  let l = str.slice(ind+1);
  return f+l;
}
console.log(name('javascript', 's'));          // javacript
console.log(name('numaan','a'));               // numan

Write a JavaScript program to create a new string from a given string by changing the position of the first and last characters. The string length must be broader than or equal to 1.-----------------------------------------
function exch(name) {
  if (name.length <= 1) {
    return name;
  }
  let mid = name.substring(1, name.length - 1);
  let fir = name.charAt(0);
  let las = name.charAt(name.length - 1);
  let res = las + mid + fir;
  return res;
}
let result = exch("se");
console.log(result);

let result2 = exch("second");
console.log(result2);

----- 0r ------------------------------
function name(str) {
  return str.slice(-1) + str.slice(1, -1) + str.slice(0, 1);        // only slice works with -ve indices of string in JS. t=-1, p=-2,.......
}
console.log(name('javascript'));

check how many words having 'java' in start from the given list --------------------------------------------
function check(name) {
  let starting = name.substring(0, 4);
  if (starting === "java") {
    return true;
  } else {
    return false;
  }
}
let count = 0;
let arr = ["javascript", "nonjavascript", "testscript", "javaJS","javajava"];
for (let i = 0; i < arr.length; i++) {
  if ( check(arr[i]) == true) {
    count++;
  }
}
console.log(count);

check if either a value is within the range 50-99(inclusive) ----------------------------------------
function range(x, y) {
  if ((x >= 50 && x <= 99) || (y >= 50 && y <= 99)) {
    return true;
  } else {
    return false;
  }
}
console.log(range(49, 100));   // false
console.log(range(49, 89));    // true

how many no.s are there in range 50-99(inclusive) from given range --------------------------------------
function range(x) {
  if ((x >= 50 && x <= 99)) {
    return true;
  } else {
    return false;
  }
}
const arr = [1, 55, 90, 100, 45, 67, 99, 55];
let count = 0;
for (let i = 0; i < arr.length; i++){
  if (range(arr[i]) == true) {
    count++;
  }
}
console.log(count);

find a closer no. to 100 from any given two no.s -------------------------------------------
function closerToHundred(x, y) {
  if (100 - x < 100 - y) {
    console.log(`${x} is closer than ${y}`);
  } else if (x === y) {
    console.log("both are at same position");
  } else {
    console.log(`${y} is closer than ${x}`);
  }
}
closerToHundred(5, 50);
closerToHundred(50, 50);

capitalize the first letter of each word in a given string. -------------------------------------

function capitalize(str) {
    let fchar = str.charAt(0).toUpperCase();
    let rest = str.slice(1);
    return fchar+rest
}

function sentence(sen) {
    let words = sen.split(" ");
    let finalstring = "";
    for (let a = 0; a < words.length; a++){
       finalstring = finalstring + capitalize(words[a]) +" ";
    }
    return finalstring;
}

console.log(sentence("read even if you cannot read"));
console.log(sentence("hi there how are you"));


---------- or ---------------

function makeUpper(name) {
  name = name.split(" ");
  for (let i = 0; i < name.length; i++) {
    name[i] = name[i][0].toUpperCase() + name[i].substring(1);
  }
  return name.join(" ");
}
console.log(makeUpper("read even if you can't read"));

convert given numerical value into hr:min / hh:mm format -------------------------------
function hrminsformat(mins) {
    let hr = Math.floor(mins / 60);
    hr < 10 ? hr = "0" + hr : hr;
    let min = mins % 60;
    min === 0 ? min = min + "0": min;
    return (hr+":"+min)
}
console.log(hrminsformat(180));                  // 03:00

count the vowels in given string ------------------------------------
function countVowels(name) {
  return name.replace(/[^aeiou]/g, "").length;
}
console.log(countVowels("read even"));

------------------- or ------------
function countVowels(name) {
  var count = 0;
  for (let i = 0; i < name.length; i++) {
    if (
      name[i] == "a" ||
      name[i] == "e" ||
      name[i] == "i" ||
      name[i] == "o" ||
      name[i] == "u"
    ) {
      count++;
    }
  }
  console.log(count);
}
countVowels("namee");

check if a string is having same p and t ------------------------------
function countchar(st,char1,char2,count1=0, count2=0) {
    for (let a = 0; a < st.length; a++){
        if (st[a] === char1) {
            count1++;
        } else if (st[a] === char2) {
            count2++;
        }
    }
    if (count1 === count2) {
    return true;
   // console.log(`have same ${char1} and ${char2}`);
    
    } else {
    return true;
   //     console.log(`don't have same ${char1} and ${char2}`);
        

    }
}
console.log(countchar("javassrrrs", "s", "r"));
// countchar("javapptttp", "p", "t");
----------------- or ------------------------
function pteq(str) {
  let pcount = str.replace(/[^p]/g, "").length;
  let tcount = str.replace(/[^t]/g, "").length;
  if (pcount === tcount) {
    return true;
  } else {
    return false;
  }
}
console.log(pteq("xyzppttt"));

check if a two strings having same/equal p or not-----------------------------------
function countchar(st,char,count=0) {
    for (let a = 0; a < st.length; a++){
        if (st[a] === char) {
            count++
        }
    }
    return count;
}
function charsequals(str1, str2, ch) {
    let c1 = countchar(str1,ch);
    let c2 = countchar(str2,ch);
    if (c1 === c2) {
        console.log(`both have equal  ${ch}`);
        
    }
    else {
        console.log(`dont have equal ${ch}`);
        
    }
}
charsequals("apbpcpp", "qpwpepp","p");

create new copy the string / repeat the string n times into new string ------------------------
function repeatt(str,x) {
    let contained = "";
    for (let a = 0; a < x; a++){
        contained = contained + str;
    }
    return contained;
}
console.log(repeatt("javasctipt",3));
---------------- or ----------------------------
function copy(str, nos) {
  if (str.length === 0) {
    return false;
  } else {
    return str.repeat(nos);          // return new string, without changing the original string value
  }
}
console.log(copy("abc",5));
console.log(copy('copy', 2));

create a string of 4 copies, of last 3 characters, string should be of atleast 3 chars -------------------
function repeatt(str,x) {
    let lastthree = str.slice(-3);
    let contained = ""
    for (let i = 0; i < x; i++){
        contained = contained + lastthree;
    }
    return contained;
}
console.log(repeatt("javascript",4));
------------ or --------------------------
function copy(str, nos) {
  if (str.length > 3) {
    let lastings = str.substring(str.length - 3);
    return lastings.repeat(nos);
  }
}
console.log(copy("python", 3));

take first half of a even string only -----------------------
function fhalf(str) {
  if (str.length % 2 === 0) {
    return str.substring(0, str.length / 2);
    // return str.slice(0, str.length / 2);
  }
  return str;
}
console.log(fhalf("javascript"));
console.log(fhalf("tatapapa"));
console.log(fhalf("tatapapaa"));

remove first and last character from string -----------------------
function name(str) {
  return str.slice(1, str.length - 1);
}
console.log(name('javascript'));                      // avascript

bring last three characters on the front of a string ---------------------------
function three(str) {
  if (str.length > 3) {
    let last = str.slice(str.length - 3);
    let final = last + str;
    return final.slice(0,final.length-3)
  }
}
console.log(three('javascript'));

-------- or -------------------------- j=-10, a=-9, v=-8, a=-7, s=-6, c=-5, r=-4, i=-3, p=-2, t=-1
  if (str.length > 3) { 
    return str.slice(-3) + str.slice(0, -3);
  }
}
console.log(three('javascript'));

==============================================================================================================
reverse the string ---------------------------------
function reverse(str) {
    return str.split('').reverse().join('');
}
console.log(reverse("world"));
console.log(reverse("reverse"));

remove the spaces from the string ------------------------
function noSpace(x) {
    return x.split(" ").join('')
}
console.log(noSpace("8 j 8   mBliB8g  imjB8B8  jl  B"));

convert each word's first character to uppercase ------------------------------------------
let writing = "How can mirrors be real if our eyes aren't real";

function firstCharUpper(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
}

String.prototype.toJadenCase = function() {
    let spl = this.split(" ");
    let finalString = "";
    for (let a = 0; a < spl.length; a++) {
        finalString = finalString + firstCharUpper(spl[a]) + " ";
    }
    return finalString.trim();
};

console.log(writing.toJadenCase());

making a function using 'String.prototype' is making a method available to use on all instances of String.(like charAt(),trim(),......)

check if a string ends with a given "string" ----------------------------------------
function solution(str, end) {
  if (str.endsWith(end)) {
    return true;
  } else {
    return false;
  }
}
console.log(solution("abcde", "cde"));     // true
console.log(solution("abcde", "abc"));     // false

------------ or ----------------------------- without using endsWith method
function solution(str, ending) {
    return str.slice(0 - ending.length) === ending;
}
console.log(solution("abcde","cde"));    // true
console.log(solution("abcde","abc"));    // false

check if a string have a "string" in the starting -----------------------------------
function solution(str, starting) {
    return str.startsWith(starting);
}
console.log(solution("abcde","abc"));         // true
console.log(solution("abcde","ac"));          // false

---------------- or ----------------------------without using startsWith method
function solution(str, starting) {
    return str.slice(0,starting.length)===starting
}
console.log(solution("abcde","abc"));
console.log(solution("abcde","acc"));
 
count the sheeps ----------------------------------
const sheep = [true,  true,  true,  false,
  true,  true,  true,  true ,
  true,  false, true,  false,
  true,  false, false, true ,
  true,  true,  true,  true ,
  false, false, true,  true];

function countSheeps(sheep) {
  let count=0;
  for(let a=0; a<sheep.length; a++){
    if(sheep[a]===true){
      count++;
    }
  }
  return count;
}
console.log(countSheeps(sheep));

------------- or ----------------------------
let count = sheep.filter(x => x === true).length;
console.log(count);

if number is even then multiply it by 8 , if it is odd then multiply by 9 ------------------------
function simpleMultiplication(number) {
 return (number%2===0 ? number*8 : number*9)
}
console.log(simpleMultiplication(8));
console.log(simpleMultiplication(9));

filter the list of friends, your friends have 4 characters -----------------------------
function friend(friends){
    let output = [];
    for(let a=0; a<friends.length; a++){
      if(friends[a].length===4){
        output.push(friends[a]);
      }
    }
    return output;
  }
console.log(friend(["Ryan", "Kieran", "Jason", "Yous"]));
-------------------------------- or ------------------
function friend(friends) {
    return friends.filter(x => x.length === 4);
}
console.log(friend(["Ryan", "Kieran", "Jason", "Yous"]));


from given two string make a single string containing all unique values from both (no duplicates)--------------
function longest(s1, s2) {
    let output = [];
    let final = s1 + s2;
    let sorted = final.split('').sort();
    for (let a = 0; a < sorted.length; a++){
        if (!output.includes(sorted[a])) {                      // Determines whether an array includes a certain element, returning true or false as appropriate
            output.push(sorted[a]);
        }
    }
    return output.join('');
}
console.log(longest("aretheyhere","yestheyarehere"));

create a function , 1st para should be operation(+/-*) 2nd and 3rd should be values ----------------------------------
function basicOp(operation, value1, value2) {
  if (!isNaN(value1) && !isNaN(value2)) {
    if (operation === "+") {
      return value1 + value1;
    } else if (operation === "-") {
      return value1 - value2;
    } else if (operation === "*") {
      return value1 * value2;
    } else {
      return value1 / value2;
    }
  }
  return 0;
}
console.log(basicOp("-", 10, 20));

accum("abcd") -> "A-Bb-Ccc-Dddd" -------------------------------------
function accum(s) {
  let splitted = s.split("");
  let finalstr = "";
  for (let a = 0; a < splitted.length; a++) {
    let part = splitted[a].toUpperCase() + splitted[a].toLowerCase().repeat(a);
    finalstr = finalstr + part + (a < splitted.length - 1 ? "-" : "");
  }
  return finalstr;
}
console.log(accum("ZpglnRxqenU"));

------------------------ or ------------------------
function accum(str) {
   return str.split('').map((e,i)=> str[i].toUpperCase()+str[i].toLowerCase().repeat(i)+(i<str.length-1?"-":"")).join('')
}
console.log(accum("abcdefgh"));

Every day you rent the car costs $40. If you rent the car for 7 or more days, you get $50 off your total. Alternatively, 
if you rent the car for 3 or more days, you get $20 off your total.
function carRentalCost(d) {
    return d * 40 - (d >= 7 ? 50 : (d >= 3 ? 20 : 0));
}
-------------or ---------------------
function carRentalCost(d) {
    let cost = 0;
    if (d >= 7) {
        cost = (d * 40) - 50;
    } else if (d >= 3) {
        cost = (d * 40) - 20;
    } else {
        cost = d * 40;
    }
    return cost
}

if name equals owner then "hello boss" else "hello guest" ----------------------------
function greet (name, owner) {
    return "Hello " + (name === owner ? "Boss" : "Guest");
}

we have colors named a to m, if any other color appear return it in form of count/string's length.
like : s="aaaxbbbbyyhwawiwjjjwwm" --------------------> 8/22;  
function printerEror(s){
    let spl = spl.split('');
    let output = [];
    let count=0;
  for(let i=0; i<spl.length; i++){
     if(spl[i] < 'a' || spl[i]>'m'){
       output.push(spl[a]);
     }
  }
  return output.length+"/"+s.length;
}

check Isogram string (An isogram is a word that has no repeating letters, also gG is repeated)-----------------------------
function isIsogram(str) {
    let spl = str.split('');
    for (let a = 0; a < spl.length; a++){
        for (let b = a + 1; b < spl.length; b++){
            if (spl[a].toLowerCase() === spl[b].toLowerCase()) {
                return false;
            }
        }
    }
    return true;
}
console.log(isIsogram("gmsheG"));            // false

make a function that returns a string, every char is repeated twice, like "String"-----> "SSttrriinngg".
function doubleChar(str) {
   let spl = str.split('');
  let output = [];
  for (let i = 0; i < spl.length; i++){
    output.push(spl[i] + spl[i]);
  }
  return output.join("");
}

----- or ------ 
const doubleChar = (str) => str.split("").map(c => c + c).join("");

whethe a particular element is present in array or not-----------------------------------
function check(a, x) {
  for (let i = 0; i < a.length; i++){
    if (x === a[i]) {
      return true;
    }
  }
  return false;
}
------ or ------------------
function check(a, x) {
  return a.find(value=> value===x)? true : false;
}
------ or -----------------
function check(a, x) {
  return a.includes(x);
}

find second largest number in array ----------------------------------------
function secondLargest(arr) {
  let max = arr[0];
  let final = [];
  for (let i = 0; i < arr.length; i++) {
    if (max < arr[i]) {
      max = arr[i];
    }
  }
  final = arr.filter((x) => x != max);
  let secmax = final[0];
  for (let i = 0; i < final.length; i++) {
    if (secmax < final[i]) {
      secmax = final[i];
    }
  }
  return secmax;
}
console.log(secondLargest([1, 2, 3, 4,5,66,77]));

check if string is alphanumeric(no white spaces,underscore,null)-------------------------------
function alphanumeric(str) {
    let regex = /^[a-zA-Z0-9]+$/;
    return regex.test(str);
}

============================ seconds are given, convert them into "xx hour(s), xx minute(s) and xx second(s)"======================
function formatDuration(seconds) {
  let hrs, mins, secs;
  if (seconds >= 3600) {
    hrs = Math.floor(seconds / 3600);
    mins = Math.floor((seconds % 3600) / 60);
    secs = seconds % 60;
    return `${hrs} hour${hrs > 1 ? "s" : ""}${
      mins > 0 || secs > 0 ? ", " : ""
    }${mins < 1 ? "" : mins + " minute"}${mins > 1 ? "s" : ""} ${secs>0?"and":""} ${
      secs === 0 ? "" : secs + " second"
    }${secs > 1 ? "s" : ""}`;
  } else {
    mins = Math.floor(seconds / 60);
    secs = seconds % 60;
    return `${mins === 0 ? "" : mins + " minute"}${mins > 1 ? "s" : ""} ${secs>0?"and":""} ${
      secs === 0 ? "" : +secs + " second"
    }${secs > 1 ? "s" : ""}`;
  }
}
console.log(formatDuration(3662));         // 1 hour, 1 minute and 2 seconds

------------------------------------------- convert string into positions as a=1, b=2, c=3,..............
function alphabetPosition(text) {
  let alphabets = 'abcdefghijklmnopqrstuvwxyz';
  let output = [];
  for (let char of text.toLowerCase()){
    let positions = alphabets.indexOf(char) + 1;
    if (positions > 0) {
    output.push(positions);
    }
  }
  return output;
}

------------------------------ string may contain polish vowels, replace all them into english vowels
function correctPolishLetters(string) {
  const polishVowels = {
    ą: "a",
    ć: "c",
    ę: "e",
    ł: "l",
    ń: "n",
    ó: "o",
    ś: "s",
    ź: "z",
    ż: "z",
  };
  let result = "";
  for (let i = 0; i < string.length; i++){
    result = result + (polishVowels[string[i]] || string[i]);
  }
  return result;
}
